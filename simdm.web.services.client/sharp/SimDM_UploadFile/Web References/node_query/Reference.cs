//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5472.
// 
#pragma warning disable 1591

namespace SimDM_UploadFile.node_query {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="node_queryBinding", Namespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
        "1-out/QEX/node_query")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(EDMbaseEntity))]
    public partial class node_queryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback get_node_infoOperationCompleted;
        
        private System.Threading.SendOrPostCallback _loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback _logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback _createTemporaryFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback _deleteTemporaryFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback _versionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public node_queryService() {
            this.Url = global::SimDM_UploadFile.Properties.Settings.Default.SimDM_UploadFile_node_query_node_queryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event get_node_infoCompletedEventHandler get_node_infoCompleted;
        
        /// <remarks/>
        public event _loginCompletedEventHandler _loginCompleted;
        
        /// <remarks/>
        public event _logoutCompletedEventHandler _logoutCompleted;
        
        /// <remarks/>
        public event _createTemporaryFileCompletedEventHandler _createTemporaryFileCompleted;
        
        /// <remarks/>
        public event _deleteTemporaryFileCompletedEventHandler _deleteTemporaryFileCompleted;
        
        /// <remarks/>
        public event _versionCompletedEventHandler _versionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query", ResponseNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query")]
        [return: System.Xml.Serialization.SoapElementAttribute("Response")]
        public node_info_ve[] get_node_info(string EDMsessionId) {
            object[] results = this.Invoke("get_node_info", new object[] {
                        EDMsessionId});
            return ((node_info_ve[])(results[0]));
        }
        
        /// <remarks/>
        public void get_node_infoAsync(string EDMsessionId) {
            this.get_node_infoAsync(EDMsessionId, null);
        }
        
        /// <remarks/>
        public void get_node_infoAsync(string EDMsessionId, object userState) {
            if ((this.get_node_infoOperationCompleted == null)) {
                this.get_node_infoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_node_infoOperationCompleted);
            }
            this.InvokeAsync("get_node_info", new object[] {
                        EDMsessionId}, this.get_node_infoOperationCompleted, userState);
        }
        
        private void Onget_node_infoOperationCompleted(object arg) {
            if ((this.get_node_infoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_node_infoCompleted(this, new get_node_infoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query", ResponseNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query")]
        [return: System.Xml.Serialization.SoapElementAttribute("Response")]
        public string _login(string USER, string GROUP, string PASSWORD) {
            object[] results = this.Invoke("_login", new object[] {
                        USER,
                        GROUP,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void _loginAsync(string USER, string GROUP, string PASSWORD) {
            this._loginAsync(USER, GROUP, PASSWORD, null);
        }
        
        /// <remarks/>
        public void _loginAsync(string USER, string GROUP, string PASSWORD, object userState) {
            if ((this._loginOperationCompleted == null)) {
                this._loginOperationCompleted = new System.Threading.SendOrPostCallback(this.On_loginOperationCompleted);
            }
            this.InvokeAsync("_login", new object[] {
                        USER,
                        GROUP,
                        PASSWORD}, this._loginOperationCompleted, userState);
        }
        
        private void On_loginOperationCompleted(object arg) {
            if ((this._loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this._loginCompleted(this, new _loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query", ResponseNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query")]
        [return: System.Xml.Serialization.SoapElementAttribute("Response")]
        public string _logout(string EDMSESSIONID) {
            object[] results = this.Invoke("_logout", new object[] {
                        EDMSESSIONID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void _logoutAsync(string EDMSESSIONID) {
            this._logoutAsync(EDMSESSIONID, null);
        }
        
        /// <remarks/>
        public void _logoutAsync(string EDMSESSIONID, object userState) {
            if ((this._logoutOperationCompleted == null)) {
                this._logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.On_logoutOperationCompleted);
            }
            this.InvokeAsync("_logout", new object[] {
                        EDMSESSIONID}, this._logoutOperationCompleted, userState);
        }
        
        private void On_logoutOperationCompleted(object arg) {
            if ((this._logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this._logoutCompleted(this, new _logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query", ResponseNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query")]
        [return: System.Xml.Serialization.SoapElementAttribute("Response")]
        public fileTransferInfo _createTemporaryFile(string EDMSESSIONID, string FILENAME, string FILETYPE, bool UPLOAD) {
            object[] results = this.Invoke("_createTemporaryFile", new object[] {
                        EDMSESSIONID,
                        FILENAME,
                        FILETYPE,
                        UPLOAD});
            return ((fileTransferInfo)(results[0]));
        }
        
        /// <remarks/>
        public void _createTemporaryFileAsync(string EDMSESSIONID, string FILENAME, string FILETYPE, bool UPLOAD) {
            this._createTemporaryFileAsync(EDMSESSIONID, FILENAME, FILETYPE, UPLOAD, null);
        }
        
        /// <remarks/>
        public void _createTemporaryFileAsync(string EDMSESSIONID, string FILENAME, string FILETYPE, bool UPLOAD, object userState) {
            if ((this._createTemporaryFileOperationCompleted == null)) {
                this._createTemporaryFileOperationCompleted = new System.Threading.SendOrPostCallback(this.On_createTemporaryFileOperationCompleted);
            }
            this.InvokeAsync("_createTemporaryFile", new object[] {
                        EDMSESSIONID,
                        FILENAME,
                        FILETYPE,
                        UPLOAD}, this._createTemporaryFileOperationCompleted, userState);
        }
        
        private void On_createTemporaryFileOperationCompleted(object arg) {
            if ((this._createTemporaryFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this._createTemporaryFileCompleted(this, new _createTemporaryFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query", ResponseNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query")]
        [return: System.Xml.Serialization.SoapElementAttribute("Response")]
        public string _deleteTemporaryFile(string EDMSESSIONID, fileTransferInfo FILEINFO) {
            object[] results = this.Invoke("_deleteTemporaryFile", new object[] {
                        EDMSESSIONID,
                        FILEINFO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void _deleteTemporaryFileAsync(string EDMSESSIONID, fileTransferInfo FILEINFO) {
            this._deleteTemporaryFileAsync(EDMSESSIONID, FILEINFO, null);
        }
        
        /// <remarks/>
        public void _deleteTemporaryFileAsync(string EDMSESSIONID, fileTransferInfo FILEINFO, object userState) {
            if ((this._deleteTemporaryFileOperationCompleted == null)) {
                this._deleteTemporaryFileOperationCompleted = new System.Threading.SendOrPostCallback(this.On_deleteTemporaryFileOperationCompleted);
            }
            this.InvokeAsync("_deleteTemporaryFile", new object[] {
                        EDMSESSIONID,
                        FILEINFO}, this._deleteTemporaryFileOperationCompleted, userState);
        }
        
        private void On_deleteTemporaryFileOperationCompleted(object arg) {
            if ((this._deleteTemporaryFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this._deleteTemporaryFileCompleted(this, new _deleteTemporaryFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query", ResponseNamespace="http://localhost:8080/EDMWS/earlybinding/DataRepository/CascadedCsys-ROTFIX-sol10" +
            "1-out/QEX/node_query")]
        [return: System.Xml.Serialization.SoapElementAttribute("Response")]
        public string _version(string EDMSESSIONID) {
            object[] results = this.Invoke("_version", new object[] {
                        EDMSESSIONID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void _versionAsync(string EDMSESSIONID) {
            this._versionAsync(EDMSESSIONID, null);
        }
        
        /// <remarks/>
        public void _versionAsync(string EDMSESSIONID, object userState) {
            if ((this._versionOperationCompleted == null)) {
                this._versionOperationCompleted = new System.Threading.SendOrPostCallback(this.On_versionOperationCompleted);
            }
            this.InvokeAsync("_version", new object[] {
                        EDMSESSIONID}, this._versionOperationCompleted, userState);
        }
        
        private void On_versionOperationCompleted(object arg) {
            if ((this._versionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this._versionCompleted(this, new _versionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5476")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://epmtech.jotne.com/Ap209_multidisciplinary_analysis_and_design_mim_LF/node_" +
        "query")]
    public partial class node_info_ve : EDMbaseEntity {
        
        private string nODE_IDField;
        
        private string nODE_TYPEField;
        
        private string cOORDSYS_IDField;
        
        private string cOORDSYS_TYPEField;
        
        private string cOORD1Field;
        
        private string cOORD2Field;
        
        private string cOORD3Field;
        
        /// <remarks/>
        public string NODE_ID {
            get {
                return this.nODE_IDField;
            }
            set {
                this.nODE_IDField = value;
            }
        }
        
        /// <remarks/>
        public string NODE_TYPE {
            get {
                return this.nODE_TYPEField;
            }
            set {
                this.nODE_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string COORDSYS_ID {
            get {
                return this.cOORDSYS_IDField;
            }
            set {
                this.cOORDSYS_IDField = value;
            }
        }
        
        /// <remarks/>
        public string COORDSYS_TYPE {
            get {
                return this.cOORDSYS_TYPEField;
            }
            set {
                this.cOORDSYS_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string COORD1 {
            get {
                return this.cOORD1Field;
            }
            set {
                this.cOORD1Field = value;
            }
        }
        
        /// <remarks/>
        public string COORD2 {
            get {
                return this.cOORD2Field;
            }
            set {
                this.cOORD2Field = value;
            }
        }
        
        /// <remarks/>
        public string COORD3 {
            get {
                return this.cOORD3Field;
            }
            set {
                this.cOORD3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(fileTransferInfo))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(node_info_ve))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5476")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://epmtech.jotne.com/Ap209_multidisciplinary_analysis_and_design_mim_LF/node_" +
        "query")]
    public partial class EDMbaseEntity {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5476")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://epmtech.jotne.com/Ap209_multidisciplinary_analysis_and_design_mim_LF/node_" +
        "query")]
    public partial class fileTransferInfo : EDMbaseEntity {
        
        private string uploadOrDownloadUrlField;
        
        private string progressInfoUrlField;
        
        private string fileNameOnServerField;
        
        private string operationField;
        
        /// <remarks/>
        public string uploadOrDownloadUrl {
            get {
                return this.uploadOrDownloadUrlField;
            }
            set {
                this.uploadOrDownloadUrlField = value;
            }
        }
        
        /// <remarks/>
        public string progressInfoUrl {
            get {
                return this.progressInfoUrlField;
            }
            set {
                this.progressInfoUrlField = value;
            }
        }
        
        /// <remarks/>
        public string fileNameOnServer {
            get {
                return this.fileNameOnServerField;
            }
            set {
                this.fileNameOnServerField = value;
            }
        }
        
        /// <remarks/>
        public string operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void get_node_infoCompletedEventHandler(object sender, get_node_infoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_node_infoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_node_infoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public node_info_ve[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((node_info_ve[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void _loginCompletedEventHandler(object sender, _loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class _loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal _loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void _logoutCompletedEventHandler(object sender, _logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class _logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal _logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void _createTemporaryFileCompletedEventHandler(object sender, _createTemporaryFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class _createTemporaryFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal _createTemporaryFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fileTransferInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fileTransferInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void _deleteTemporaryFileCompletedEventHandler(object sender, _deleteTemporaryFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class _deleteTemporaryFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal _deleteTemporaryFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void _versionCompletedEventHandler(object sender, _versionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class _versionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal _versionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591